; ModuleID = 'runningsum_numba_loop'
source_filename = "<string>"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@"_ZN08NumbaEnv8__main__25runningsum_numba_loop$242Ex" = common local_unnamed_addr global i8* null
@.const.runningsum_numba_loop = internal constant [22 x i8] c"runningsum_numba_loop\00"
@PyExc_RuntimeError = external global i8
@".const.missing Environment" = internal constant [20 x i8] c"missing Environment\00"

; Function Attrs: norecurse nounwind
define i32 @"_ZN8__main__25runningsum_numba_loop$242Ex"(i64* noalias nocapture %retptr, { i8*, i32 }** noalias nocapture readnone %excinfo, i64 %arg.N) local_unnamed_addr #0 {
entry:
  %.27 = add nsw i64 %arg.N, 1
  %.76 = icmp slt i64 %arg.N, 0
  %spec.select = select i1 %.76, i64 0, i64 %.27
  %.1214 = icmp sgt i64 %spec.select, 0
  br i1 %.1214, label %B20.lr.ph, label %B32

B20.lr.ph:                                        ; preds = %entry
  %0 = xor i64 %spec.select, -1
  %1 = icmp sgt i64 %0, -2
  %smax = select i1 %1, i64 %0, i64 -2
  %2 = add i64 %spec.select, %smax
  %3 = add i64 %2, 1
  %4 = zext i64 %3 to i65
  %5 = zext i64 %2 to i65
  %6 = mul i65 %4, %5
  %7 = lshr i65 %6, 1
  %8 = trunc i65 %7 to i64
  %9 = add i64 %2, %8
  %10 = add i64 %9, 1
  br label %B32

B32:                                              ; preds = %B20.lr.ph, %entry
  %s.0.lcssa = phi i64 [ 0, %entry ], [ %10, %B20.lr.ph ]
  store i64 %s.0.lcssa, i64* %retptr, align 8
  ret i32 0
}

define i8* @"_ZN7cpython8__main__25runningsum_numba_loop$242Ex"(i8* nocapture readnone %py_closure, i8* %py_args, i8* nocapture readnone %py_kws) local_unnamed_addr {
entry:
  %.5 = alloca i8*, align 8
  %.6 = call i32 (i8*, i8*, i64, i64, ...) @PyArg_UnpackTuple(i8* %py_args, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.const.runningsum_numba_loop, i64 0, i64 0), i64 1, i64 1, i8** nonnull %.5)
  %.7 = icmp eq i32 %.6, 0
  br i1 %.7, label %entry.if, label %entry.endif, !prof !0

entry.if:                                         ; preds = %entry.endif.endif.endif, %entry
  ret i8* null

entry.endif:                                      ; preds = %entry
  %.11 = load i8*, i8** @"_ZN08NumbaEnv8__main__25runningsum_numba_loop$242Ex", align 8
  %.16 = icmp eq i8* %.11, null
  br i1 %.16, label %entry.endif.if, label %entry.endif.endif, !prof !0

entry.endif.if:                                   ; preds = %entry.endif
  call void @PyErr_SetString(i8* nonnull @PyExc_RuntimeError, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @".const.missing Environment", i64 0, i64 0))
  ret i8* null

entry.endif.endif:                                ; preds = %entry.endif
  %.20 = load i8*, i8** %.5, align 8
  %.22 = call i8* @PyNumber_Long(i8* %.20)
  %.23 = icmp eq i8* %.22, null
  br i1 %.23, label %entry.endif.endif.endif, label %entry.endif.endif.if, !prof !0

entry.endif.endif.if:                             ; preds = %entry.endif.endif
  %.25 = call i64 @PyLong_AsLongLong(i8* nonnull %.22)
  call void @Py_DecRef(i8* nonnull %.22)
  br label %entry.endif.endif.endif

entry.endif.endif.endif:                          ; preds = %entry.endif.endif, %entry.endif.endif.if
  %.21.0 = phi i64 [ %.25, %entry.endif.endif.if ], [ undef, %entry.endif.endif ]
  %.30 = call i8* @PyErr_Occurred()
  %.31 = icmp eq i8* %.30, null
  br i1 %.31, label %entry.endif.endif.endif.endif, label %entry.if, !prof !1

entry.endif.endif.endif.endif:                    ; preds = %entry.endif.endif.endif
  %.27.i = add nsw i64 %.21.0, 1
  %.76.i = icmp slt i64 %.21.0, 0
  %spec.select.i = select i1 %.76.i, i64 0, i64 %.27.i
  %.1214.i = icmp sgt i64 %spec.select.i, 0
  br i1 %.1214.i, label %B20.lr.ph.i, label %"_ZN8__main__25runningsum_numba_loop$242Ex.exit"

B20.lr.ph.i:                                      ; preds = %entry.endif.endif.endif.endif
  %0 = xor i64 %spec.select.i, -1
  %1 = icmp sgt i64 %0, -2
  %smax.i = select i1 %1, i64 %0, i64 -2
  %2 = add i64 %smax.i, %spec.select.i
  %3 = add i64 %2, 1
  %4 = zext i64 %3 to i65
  %5 = zext i64 %2 to i65
  %6 = mul i65 %4, %5
  %7 = lshr i65 %6, 1
  %8 = trunc i65 %7 to i64
  %9 = add i64 %3, %8
  br label %"_ZN8__main__25runningsum_numba_loop$242Ex.exit"

"_ZN8__main__25runningsum_numba_loop$242Ex.exit": ; preds = %entry.endif.endif.endif.endif, %B20.lr.ph.i
  %s.0.lcssa.i = phi i64 [ 0, %entry.endif.endif.endif.endif ], [ %9, %B20.lr.ph.i ]
  %.53 = call i8* @PyLong_FromLongLong(i64 %s.0.lcssa.i)
  ret i8* %.53
}

declare i32 @PyArg_UnpackTuple(i8*, i8*, i64, i64, ...) local_unnamed_addr

declare void @PyErr_SetString(i8*, i8*) local_unnamed_addr

declare i8* @PyNumber_Long(i8*) local_unnamed_addr

declare i64 @PyLong_AsLongLong(i8*) local_unnamed_addr

declare void @Py_DecRef(i8*) local_unnamed_addr

declare i8* @PyErr_Occurred() local_unnamed_addr

declare i8* @PyLong_FromLongLong(i64) local_unnamed_addr

; Function Attrs: nounwind
declare void @llvm.stackprotector(i8*, i8**) #1

attributes #0 = { norecurse nounwind }
attributes #1 = { nounwind }

!0 = !{!"branch_weights", i32 1, i32 99}
!1 = !{!"branch_weights", i32 99, i32 1}

